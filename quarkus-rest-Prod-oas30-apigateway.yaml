openapi: "3.0.1"
info:
  title: "quarkus-rest"
  version: "1.0"
servers:
- url: "https://6oqs9mh93k.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "Prod"
paths:
  /{proxy+}:
    options:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
    x-amazon-apigateway-any-method:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - CustomAuthorizer: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:161710045430:function:quarkus-rest-QuarkusAwsLambdaRest-5qEA3q4Mu8gZ/invocations"
        passthroughBehavior: "when_no_match"
components:
  securitySchemes:
    CustomAuthorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        type: "token"
        authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:161710045430:function:quarkus-lambda-QuarkusAwsLambda-0qoETFw6t0qu/invocations"
        authorizerResultTtlInSeconds: 300
        identityValidationExpression: "^Bearer .*"
